package view;

import controller.ProcessoController;
import dao.ProcessoDao;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ProcessoModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.swing.JRViewer;

public class ListagemProcesso extends javax.swing.JFrame {

    int nivel=2;

    public int getNivel() {
        return nivel;
    }

    public void setNivel(int nivel) {
        this.nivel = nivel;
    }

    
    List<ProcessoModel> lista;
    public ListagemProcesso() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        getContentPane().setBackground(Color.DARK_GRAY);
        jbProcurar.setBackground(Color.white);
        jbRefrescarTabela.setBackground(Color.white);
        jbVoltar.setBackground(Color.white);
        jbEliminar.setBackground(Color.white);
        jbDetalhes.setBackground(Color.white);
        jbActualizar.setBackground(Color.white);
        preenchertabela();
    }
    public void preenchertabela(){
        DefaultTableModel tabela = (DefaultTableModel)jtTabela.getModel();
        ProcessoController p = new ProcessoController();
        lista = p.listar();
        for(int i=0; i<lista.size(); i++){
            Object[] dados = {lista.get(i).getId(), lista.get(i).getNomeCompleto(), 
            lista.get(i).getNumeroBi(), lista.get(i).getNaturalidade(), 
            lista.get(i).getNacionalidade(), lista.get(i).getLocalResidencia(), 
            lista.get(i).getGenero(), lista.get(i).getDataDeNascimento(), 
            lista.get(i).getDoenca(), lista.get(i).getNomeDoenca(), 
            lista.get(i).getCuidadosBasicos(), lista.get(i).getAntecedentesCriminais(),
            lista.get(i).getCrimesCometidos()};
            tabela.addRow(dados);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbEliminar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jbVoltar = new javax.swing.JButton();
        jpTabela = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jtProcurar = new javax.swing.JTextField();
        jbProcurar = new javax.swing.JButton();
        jlProcura = new javax.swing.JLabel();
        jbRefrescarTabela = new javax.swing.JButton();
        jbDetalhes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.darkGray);
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 4));

        jbEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1814090_delete_garbage_trash_icon.png"))); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/103514_edit_text_document_icon.png"))); // NOI18N
        jbActualizar.setText("Actualizar");
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbVoltar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/2303135_arrow_back_left_refresh_renew_icon.png"))); // NOI18N
        jbVoltar.setText("Voltar");
        jbVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jpTabela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtTabela.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "BI", "NATURALIDADE", "NACIONALIDADE", "RESIDENCIA", "GENERO", "DATA DE NASCIMENTO", "DOENTE", "NOME DOENCA", "CUIDADOS BASICOS", "ANTECEDENTES CRIMINAIS", "CRIMES"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabela.setRowHeight(40);
        jScrollPane1.setViewportView(jtTabela);

        javax.swing.GroupLayout jpTabelaLayout = new javax.swing.GroupLayout(jpTabela);
        jpTabela.setLayout(jpTabelaLayout);
        jpTabelaLayout.setHorizontalGroup(
            jpTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jpTabelaLayout.setVerticalGroup(
            jpTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
        );

        jtProcurar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jtProcurar.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jbProcurar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jbProcurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/2303114_explore_lense_magnifier_search_searching_icon.png"))); // NOI18N
        jbProcurar.setText("Procurar");
        jbProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProcurarActionPerformed(evt);
            }
        });

        jlProcura.setBackground(new java.awt.Color(255, 255, 255));
        jlProcura.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlProcura.setForeground(new java.awt.Color(255, 255, 255));
        jlProcura.setText("NOME");

        jbRefrescarTabela.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbRefrescarTabela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/11116_refresh_icon.png"))); // NOI18N
        jbRefrescarTabela.setText("Refrescar Tabela");
        jbRefrescarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefrescarTabelaActionPerformed(evt);
            }
        });

        jbDetalhes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbDetalhes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/9338080_printer_print_printing_paper_file_icon.png"))); // NOI18N
        jbDetalhes.setText("Imprimir");
        jbDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDetalhesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jpTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlProcura, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 1128, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jbProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbDetalhes)
                        .addGap(69, 69, 69)
                        .addComponent(jbRefrescarTabela)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jlProcura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbRefrescarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProcurarActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel tabela = (DefaultTableModel)jtTabela.getModel();
        ProcessoController p = new ProcessoController();
        lista = p.listar();
        String a = jtProcurar.getText();
        for(int i=0; i<lista.size(); i++){
            if(a.equalsIgnoreCase(lista.get(i).getNomeCompleto())){
                tabela.setRowCount(0);
               Object[] dados = {lista.get(i).getId(), lista.get(i).getNomeCompleto(), 
            lista.get(i).getNumeroBi(), lista.get(i).getNaturalidade(), 
            lista.get(i).getNacionalidade(), lista.get(i).getLocalResidencia(), 
            lista.get(i).getGenero(), lista.get(i).getDataDeNascimento(), 
            lista.get(i).getDoenca(), lista.get(i).getNomeDoenca(), 
            lista.get(i).getCuidadosBasicos(), lista.get(i).getAntecedentesCriminais(),
            lista.get(i).getCrimesCometidos()};
            tabela.addRow(dados); 
            }
            
        }
        
    }//GEN-LAST:event_jbProcurarActionPerformed

    private void jbVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVoltarActionPerformed
       if(getNivel()==1){
           new Menu().setVisible(rootPaneCheckingEnabled);
           this.dispose();
       }else{
           new MenuFuncionario().setVisible(rootPaneCheckingEnabled);
           this.dispose();
       }
        
    }//GEN-LAST:event_jbVoltarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
        int indiceLinha = jtTabela.getSelectedRow();
        int id = (int) jtTabela.getValueAt(indiceLinha, 0);
        
        if(indiceLinha!=-1){
            int a= JOptionPane.showConfirmDialog(null, "DESEJA ELIMNAR O PROCESSO", "ELIMINAR", JOptionPane.YES_NO_OPTION);
          if(a==JOptionPane.YES_OPTION){
            ProcessoController eP= new ProcessoController();
            eP.eliminar(id);
            DefaultTableModel tabela = (DefaultTableModel)jtTabela.getModel();
            tabela.setRowCount(0);
             
             preenchertabela();
          }
        }
               
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        // TODO add your handling code here:
        int indiceLinha = jtTabela.getSelectedRow();
       if(indiceLinha!=-1){
        int a= JOptionPane.showConfirmDialog(null, "POR FAVOR CONFIRME A ACTUALIZACAO", "Actualizar", JOptionPane.YES_NO_OPTION);
          if(a==JOptionPane.YES_OPTION){
              ProcessoController pA = new ProcessoController();
              pA.actualizar(jtTabela.getValueAt(indiceLinha, 0).toString(), 
                      jtTabela.getValueAt(indiceLinha, 1).toString(), 
                      jtTabela.getValueAt(indiceLinha, 2).toString(), 
                      jtTabela.getValueAt(indiceLinha, 3).toString(), 
                      jtTabela.getValueAt(indiceLinha, 4).toString(), 
                      jtTabela.getValueAt(indiceLinha, 5).toString(), 
                      jtTabela.getValueAt(indiceLinha, 6).toString(), 
                      jtTabela.getValueAt(indiceLinha, 7).toString(), 
                      jtTabela.getValueAt(indiceLinha, 8).toString(), 
                      jtTabela.getValueAt(indiceLinha, 9).toString(), 
                      jtTabela.getValueAt(indiceLinha, 10).toString(), 
                      jtTabela.getValueAt(indiceLinha, 11).toString(), 
                     jtTabela.getValueAt(indiceLinha, 12).toString() );
              DefaultTableModel tabela = (DefaultTableModel)jtTabela.getModel();
            tabela.setRowCount(0);
             
             preenchertabela();
           }
        }
              
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbRefrescarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefrescarTabelaActionPerformed
        DefaultTableModel tabela = (DefaultTableModel)jtTabela.getModel();
        tabela.setRowCount(0);
        preenchertabela();
    }//GEN-LAST:event_jbRefrescarTabelaActionPerformed

    private void jbDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDetalhesActionPerformed
        // TODO add your handling code here:
        Date d = new Date();
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss a");
        String data = f.format(d);
        
        int indiceLinha = jtTabela.getSelectedRow();
        if(indiceLinha!=-1){
        try{
            //cria um objecto da JasperReport, ou seja. um relatorio
            //deve-se passar o camino onde esta o relattorio dentro do seu projecto
            JasperReport relatorioCompilado 
                    = JasperCompileManager.compileReport("src/Relatorio/imprimirProcesso.jrxml");
            
            //parametro de filtro
            Map<String, Object> parametros = new HashMap<>();
            parametros.put("nome", jtTabela.getValueAt(indiceLinha, 1).toString());
            parametros.put("dataDeNascimento",jtTabela.getValueAt(indiceLinha, 7).toString());
            parametros.put("nacionalidade",jtTabela.getValueAt(indiceLinha, 4).toString());
            parametros.put("naturalidade",jtTabela.getValueAt(indiceLinha, 3).toString());
            parametros.put("numeroBi",jtTabela.getValueAt(indiceLinha, 2).toString());
            parametros.put("Genero",jtTabela.getValueAt(indiceLinha, 6).toString());
            parametros.put("localResidencia",jtTabela.getValueAt(indiceLinha, 5).toString());
            parametros.put("doenca",jtTabela.getValueAt(indiceLinha, 8).toString());
            parametros.put("nomeDoenca",jtTabela.getValueAt(indiceLinha, 9).toString());
            parametros.put("cuidadosBasicos",jtTabela.getValueAt(indiceLinha, 10).toString());
            parametros.put("registoCrime",jtTabela.getValueAt(indiceLinha, 11).toString());
            parametros.put("crimes",jtTabela.getValueAt(indiceLinha, 11).toString());
            parametros.put("data",data);
            
            //preencher o relatorio com uma lista de usuarios passada como um JRbeanCollecrionDataSource
            JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado,
                    parametros, new JRBeanCollectionDataSource(ProcessoController.listar()));
            
            //cria um dialogo para colocar o relatorio dentro dele
            JDialog tela = new JDialog(this, "Imprimir Processo", true);
            tela.setSize(1000, 600);
            
            //criar um componente swing que contem o relatorio
            JRViewer painelRelatorio = new JRViewer (relatorioPreenchido);
            
            //adiciona o painel com o relatorio dentro do JDialog criado
            tela.getContentPane().add(painelRelatorio);
            
            //tornar visivel a janela criada com o relatorio
            tela.setVisible(true);
            
        }catch(JRException erro){
            JOptionPane.showMessageDialog(null, "Ocorreu um erro na impressao \n"+ erro);
        }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione na tabela o processo a imprimir");
        }
        
        
        
//        Date dt = new Date();
//        SimpleDateFormat df = new SimpleDateFormat("dd/mm/yyyy hh:mm:ss");
//        String data = df.format(dt);
//        int indiceLinha = jtTabela.getSelectedRow();
//       if(indiceLinha!=-1){
//        new DetalhesProcesso(jtTabela.getValueAt(indiceLinha, 1).toString(),
//                jtTabela.getValueAt(indiceLinha, 2).toString(),
//                jtTabela.getValueAt(indiceLinha, 3).toString(),
//                jtTabela.getValueAt(indiceLinha, 4).toString(),
//                jtTabela.getValueAt(indiceLinha, 5).toString(),
//                jtTabela.getValueAt(indiceLinha, 6).toString(),
//                jtTabela.getValueAt(indiceLinha, 7).toString(),
//                jtTabela.getValueAt(indiceLinha, 8).toString(),
//                jtTabela.getValueAt(indiceLinha, 9).toString(),
//                jtTabela.getValueAt(indiceLinha, 10).toString(),
//                jtTabela.getValueAt(indiceLinha, 11).toString(),
//                jtTabela.getValueAt(indiceLinha, 12).toString(), data).setVisible(true);
//       }
    }//GEN-LAST:event_jbDetalhesActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbDetalhes;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbProcurar;
    private javax.swing.JButton jbRefrescarTabela;
    private javax.swing.JButton jbVoltar;
    private javax.swing.JLabel jlProcura;
    private javax.swing.JPanel jpTabela;
    private javax.swing.JTextField jtProcurar;
    private javax.swing.JTable jtTabela;
    // End of variables declaration//GEN-END:variables
}
